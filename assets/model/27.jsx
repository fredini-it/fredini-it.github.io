/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 C:\cmd\redux\reduxblender\27.glb -o C:\cmd\redux\reduxblender\27.jsx --shadows --keepnames --meta --printwidth 120 --precision 3 --transform --resolution 2048 --keepmeshes --keepmaterials --format png 
Files: C:\cmd\redux\reduxblender\27.glb [9.82MB] > C:\cmd\redux\reduxblender\27-transformed.glb [2.55MB] (74%)
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function 27(props) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('/27-transformed.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group
          name="Body"
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'Body' }}>
          <primitive object={nodes.Body_lodA} />
          <primitive object={nodes.Calliper_Front_L} />
          <primitive object={nodes.Calliper_Front_R} />
          <primitive object={nodes.Calliper_Rear_L} />
          <primitive object={nodes.Calliper_Rear_R} />
        </group>
        <skinnedMesh
          name="BrakePedalInterior"
          geometry={nodes.BrakePedalInterior.geometry}
          material={materials.interior}
          skeleton={nodes.BrakePedalInterior.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'BrakePedalInterior' }}
        />
        <group
          name="CaliperLF"
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'CaliperLF' }}>
          <skinnedMesh
            name="Combined3DWheel_3DWheel_front_L_Instance1_Src4002"
            geometry={nodes.Combined3DWheel_3DWheel_front_L_Instance1_Src4002.geometry}
            material={materials.ext_brake_caliper}
            skeleton={nodes.Combined3DWheel_3DWheel_front_L_Instance1_Src4002.skeleton}
          />
          <skinnedMesh
            name="Combined3DWheel_3DWheel_front_L_Instance1_Src4002_1"
            geometry={nodes.Combined3DWheel_3DWheel_front_L_Instance1_Src4002_1.geometry}
            material={materials.CaliperBadgeA}
            skeleton={nodes.Combined3DWheel_3DWheel_front_L_Instance1_Src4002_1.skeleton}
          />
        </group>
        <group
          name="CaliperRF"
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'CaliperRF' }}>
          <skinnedMesh
            name="Combined3DWheel_3DWheel_front_L_Instance1_Src4003"
            geometry={nodes.Combined3DWheel_3DWheel_front_L_Instance1_Src4003.geometry}
            material={materials.ext_brake_caliper}
            skeleton={nodes.Combined3DWheel_3DWheel_front_L_Instance1_Src4003.skeleton}
          />
          <skinnedMesh
            name="Combined3DWheel_3DWheel_front_L_Instance1_Src4003_1"
            geometry={nodes.Combined3DWheel_3DWheel_front_L_Instance1_Src4003_1.geometry}
            material={materials.CaliperBadgeA}
            skeleton={nodes.Combined3DWheel_3DWheel_front_L_Instance1_Src4003_1.skeleton}
          />
        </group>
        <group
          name="CaliperRR"
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'CaliperRR' }}>
          <skinnedMesh
            name="Combined3DWheel_3DWheel_front_L_Instance1_Src4005"
            geometry={nodes.Combined3DWheel_3DWheel_front_L_Instance1_Src4005.geometry}
            material={materials.ext_brake_caliper}
            skeleton={nodes.Combined3DWheel_3DWheel_front_L_Instance1_Src4005.skeleton}
          />
          <skinnedMesh
            name="Combined3DWheel_3DWheel_front_L_Instance1_Src4005_1"
            geometry={nodes.Combined3DWheel_3DWheel_front_L_Instance1_Src4005_1.geometry}
            material={materials.CaliperBadgeA}
            skeleton={nodes.Combined3DWheel_3DWheel_front_L_Instance1_Src4005_1.skeleton}
          />
        </group>
        <skinnedMesh
          name="ChassisBadge"
          geometry={nodes.ChassisBadge.geometry}
          material={materials.BadgeA}
          skeleton={nodes.ChassisBadge.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'ChassisBadge' }}
        />
        <skinnedMesh
          name="ChassisBase"
          geometry={nodes.ChassisBase.geometry}
          material={materials.Base}
          skeleton={nodes.ChassisBase.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'ChassisBase' }}
        />
        <skinnedMesh
          name="ChassisCarbon1M"
          geometry={nodes.ChassisCarbon1M.geometry}
          material={materials.Carbon1M}
          skeleton={nodes.ChassisCarbon1M.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'ChassisCarbon1M' }}
        />
        <skinnedMesh
          name="ChassisCarbon2"
          geometry={nodes.ChassisCarbon2.geometry}
          material={materials.ext_carbon}
          skeleton={nodes.ChassisCarbon2.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'ChassisCarbon2' }}
        />
        <skinnedMesh
          name="ChassisCarbon2M"
          geometry={nodes.ChassisCarbon2M.geometry}
          material={materials.Carbon2M}
          skeleton={nodes.ChassisCarbon2M.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'ChassisCarbon2M' }}
        />
        <group
          name="ChassisColoured"
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'ChassisColoured' }}>
          <skinnedMesh
            name="Coloured_Geo_lodA"
            geometry={nodes.Coloured_Geo_lodA.geometry}
            material={materials.Coloured}
            skeleton={nodes.Coloured_Geo_lodA.skeleton}
          />
          <skinnedMesh
            name="Coloured_Geo_lodA_1"
            geometry={nodes.Coloured_Geo_lodA_1.geometry}
            material={materials.ext_chrome}
            skeleton={nodes.Coloured_Geo_lodA_1.skeleton}
          />
        </group>
        <skinnedMesh
          name="ChassisEngine"
          geometry={nodes.ChassisEngine.geometry}
          material={materials.EngineA}
          skeleton={nodes.ChassisEngine.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'ChassisEngine' }}
        />
        <group
          name="ChassisGlass"
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'ChassisGlass' }}>
          <skinnedMesh
            name="Window_Geo_lodA"
            geometry={nodes.Window_Geo_lodA.geometry}
            material={materials.glass_windshield}
            skeleton={nodes.Window_Geo_lodA.skeleton}
          />
          <skinnedMesh
            name="Window_Geo_lodA_1"
            geometry={nodes.Window_Geo_lodA_1.geometry}
            material={materials.glass_taillight}
            skeleton={nodes.Window_Geo_lodA_1.skeleton}
          />
          <skinnedMesh
            name="Window_Geo_lodA_2"
            geometry={nodes.Window_Geo_lodA_2.geometry}
            material={materials.Carbon1M}
            skeleton={nodes.Window_Geo_lodA_2.skeleton}
          />
        </group>
        <skinnedMesh
          name="ChassisGrille1"
          geometry={nodes.ChassisGrille1.geometry}
          material={materials.Grille1A}
          skeleton={nodes.ChassisGrille1.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'ChassisGrille1' }}
        />
        <skinnedMesh
          name="ChassisGrille2"
          geometry={nodes.ChassisGrille2.geometry}
          material={materials.Grille2A}
          skeleton={nodes.ChassisGrille2.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'ChassisGrille2' }}
        />
        <skinnedMesh
          name="ChassisGrille3"
          geometry={nodes.ChassisGrille3.geometry}
          material={materials.Grille3A}
          skeleton={nodes.ChassisGrille3.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'ChassisGrille3' }}
        />
        <group
          name="ChassisInterior"
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'ChassisInterior' }}>
          <skinnedMesh
            name="Interior_Geo_lodA001"
            geometry={nodes.Interior_Geo_lodA001.geometry}
            material={materials.interior}
            skeleton={nodes.Interior_Geo_lodA001.skeleton}
          />
          <skinnedMesh
            name="Interior_Geo_lodA001_1"
            geometry={nodes.Interior_Geo_lodA001_1.geometry}
            material={materials.interior}
            skeleton={nodes.Interior_Geo_lodA001_1.skeleton}
          />
        </group>
        <skinnedMesh
          name="ChassisLight"
          geometry={nodes.ChassisLight.geometry}
          material={materials.LightA}
          skeleton={nodes.ChassisLight.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'ChassisLight' }}
        />
        <group
          name="ChassisPaint"
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'ChassisPaint' }}>
          <skinnedMesh
            name="Paint_Geo_lodA"
            geometry={nodes.Paint_Geo_lodA.geometry}
            material={materials.ext_chassis}
            skeleton={nodes.Paint_Geo_lodA.skeleton}
          />
          <skinnedMesh
            name="Paint_Geo_lodA_1"
            geometry={nodes.Paint_Geo_lodA_1.geometry}
            material={materials.ext_sideskirt}
            skeleton={nodes.Paint_Geo_lodA_1.skeleton}
          />
        </group>
        <skinnedMesh
          name="DoorLCarbon2"
          geometry={nodes.DoorLCarbon2.geometry}
          material={materials.Carbon2}
          skeleton={nodes.DoorLCarbon2.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'DoorLCarbon2' }}
        />
        <group
          name="DoorLColoured"
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'DoorLColoured' }}>
          <skinnedMesh
            name="Coloured_Geo_lodA002"
            geometry={nodes.Coloured_Geo_lodA002.geometry}
            material={materials.Coloured}
            skeleton={nodes.Coloured_Geo_lodA002.skeleton}
          />
          <skinnedMesh
            name="Coloured_Geo_lodA002_1"
            geometry={nodes.Coloured_Geo_lodA002_1.geometry}
            material={materials.ext_mirror_cover}
            skeleton={nodes.Coloured_Geo_lodA002_1.skeleton}
          />
        </group>
        <skinnedMesh
          name="DoorLGlass"
          geometry={nodes.DoorLGlass.geometry}
          material={materials.glass_windshield}
          skeleton={nodes.DoorLGlass.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'DoorLGlass' }}
        />
        <group
          name="DoorLInterior"
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'DoorLInterior' }}>
          <skinnedMesh
            name="Interior_Geo_lodA005"
            geometry={nodes.Interior_Geo_lodA005.geometry}
            material={materials.interior}
            skeleton={nodes.Interior_Geo_lodA005.skeleton}
          />
          <skinnedMesh
            name="Interior_Geo_lodA005_1"
            geometry={nodes.Interior_Geo_lodA005_1.geometry}
            material={materials.interior}
            skeleton={nodes.Interior_Geo_lodA005_1.skeleton}
          />
        </group>
        <group
          name="DoorLPaint"
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'DoorLPaint' }}>
          <skinnedMesh
            name="Paint_Geo_lodA004"
            geometry={nodes.Paint_Geo_lodA004.geometry}
            material={materials.ext_chassis}
            skeleton={nodes.Paint_Geo_lodA004.skeleton}
          />
          <skinnedMesh
            name="Paint_Geo_lodA004_1"
            geometry={nodes.Paint_Geo_lodA004_1.geometry}
            material={materials.ext_mirror_cover}
            skeleton={nodes.Paint_Geo_lodA004_1.skeleton}
          />
        </group>
        <skinnedMesh
          name="DoorRCarbon2"
          geometry={nodes.DoorRCarbon2.geometry}
          material={materials.Carbon2}
          skeleton={nodes.DoorRCarbon2.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'DoorRCarbon2' }}
        />
        <group
          name="DoorRColoured"
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'DoorRColoured' }}>
          <skinnedMesh
            name="Coloured_Geo_lodA003"
            geometry={nodes.Coloured_Geo_lodA003.geometry}
            material={materials.Coloured}
            skeleton={nodes.Coloured_Geo_lodA003.skeleton}
          />
          <skinnedMesh
            name="Coloured_Geo_lodA003_1"
            geometry={nodes.Coloured_Geo_lodA003_1.geometry}
            material={materials.ext_mirror_cover}
            skeleton={nodes.Coloured_Geo_lodA003_1.skeleton}
          />
        </group>
        <skinnedMesh
          name="DoorRGlass"
          geometry={nodes.DoorRGlass.geometry}
          material={materials.glass_windshield}
          skeleton={nodes.DoorRGlass.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'DoorRGlass' }}
        />
        <group
          name="DoorRInterior"
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'DoorRInterior' }}>
          <skinnedMesh
            name="Interior_Geo_lodA006"
            geometry={nodes.Interior_Geo_lodA006.geometry}
            material={materials.interior}
            skeleton={nodes.Interior_Geo_lodA006.skeleton}
          />
          <skinnedMesh
            name="Interior_Geo_lodA006_1"
            geometry={nodes.Interior_Geo_lodA006_1.geometry}
            material={materials.interior}
            skeleton={nodes.Interior_Geo_lodA006_1.skeleton}
          />
        </group>
        <group
          name="DoorRPaint"
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'DoorRPaint' }}>
          <skinnedMesh
            name="Paint_Geo_lodA005"
            geometry={nodes.Paint_Geo_lodA005.geometry}
            material={materials.ext_chassis}
            skeleton={nodes.Paint_Geo_lodA005.skeleton}
          />
          <skinnedMesh
            name="Paint_Geo_lodA005_1"
            geometry={nodes.Paint_Geo_lodA005_1.geometry}
            material={materials.ext_mirror_cover}
            skeleton={nodes.Paint_Geo_lodA005_1.skeleton}
          />
        </group>
        <skinnedMesh
          name="DriverSeatBeltColoured"
          geometry={nodes.DriverSeatBeltColoured.geometry}
          material={materials.Coloured}
          skeleton={nodes.DriverSeatBeltColoured.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'DriverSeatBeltColoured' }}
        />
        <skinnedMesh
          name="DriverSeatCarbon2"
          geometry={nodes.DriverSeatCarbon2.geometry}
          material={materials.Carbon2}
          skeleton={nodes.DriverSeatCarbon2.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'DriverSeatCarbon2' }}
        />
        <group
          name="DriverSeatInterior"
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'DriverSeatInterior' }}>
          <skinnedMesh
            name="Interior_Geo_lodA009"
            geometry={nodes.Interior_Geo_lodA009.geometry}
            material={materials.interior}
            skeleton={nodes.Interior_Geo_lodA009.skeleton}
          />
          <skinnedMesh
            name="Interior_Geo_lodA009_1"
            geometry={nodes.Interior_Geo_lodA009_1.geometry}
            material={materials.int_color2}
            skeleton={nodes.Interior_Geo_lodA009_1.skeleton}
          />
          <skinnedMesh
            name="Interior_Geo_lodA009_2"
            geometry={nodes.Interior_Geo_lodA009_2.geometry}
            material={materials.interior}
            skeleton={nodes.Interior_Geo_lodA009_2.skeleton}
          />
        </group>
        <skinnedMesh
          name="DriverSeatInteriorTillingColourZone"
          geometry={nodes.DriverSeatInteriorTillingColourZone.geometry}
          material={materials.int_color3}
          skeleton={nodes.DriverSeatInteriorTillingColourZone.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'DriverSeatInteriorTillingColourZone' }}
        />
        <skinnedMesh
          name="GasPedalInterior"
          geometry={nodes.GasPedalInterior.geometry}
          material={materials.interior}
          skeleton={nodes.GasPedalInterior.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'GasPedalInterior' }}
        />
        <skinnedMesh
          name="HandBrakeCarbon2"
          geometry={nodes.HandBrakeCarbon2.geometry}
          material={materials.Carbon2}
          skeleton={nodes.HandBrakeCarbon2.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'HandBrakeCarbon2' }}
        />
        <group
          name="HandBrakeInterior"
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'HandBrakeInterior' }}>
          <skinnedMesh
            name="Interior_Geo_lodA008"
            geometry={nodes.Interior_Geo_lodA008.geometry}
            material={materials.interior}
            skeleton={nodes.Interior_Geo_lodA008.skeleton}
          />
          <skinnedMesh
            name="Interior_Geo_lodA008_1"
            geometry={nodes.Interior_Geo_lodA008_1.geometry}
            material={materials.interior}
            skeleton={nodes.Interior_Geo_lodA008_1.skeleton}
          />
        </group>
        <skinnedMesh
          name="HoodBadge"
          geometry={nodes.HoodBadge.geometry}
          material={materials.BadgeA}
          skeleton={nodes.HoodBadge.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'HoodBadge' }}
        />
        <skinnedMesh
          name="HoodGrille1"
          geometry={nodes.HoodGrille1.geometry}
          material={materials.Grille1A}
          skeleton={nodes.HoodGrille1.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'HoodGrille1' }}
        />
        <skinnedMesh
          name="HoodInterior"
          geometry={nodes.HoodInterior.geometry}
          material={materials.interior}
          skeleton={nodes.HoodInterior.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'HoodInterior' }}
        />
        <group
          name="HoodPaint"
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'HoodPaint' }}>
          <skinnedMesh
            name="Paint_Geo_lodA003"
            geometry={nodes.Paint_Geo_lodA003.geometry}
            material={materials.ext_chassis}
            skeleton={nodes.Paint_Geo_lodA003.skeleton}
          />
          <skinnedMesh
            name="Paint_Geo_lodA003_1"
            geometry={nodes.Paint_Geo_lodA003_1.geometry}
            material={materials.ext_livery_1}
            skeleton={nodes.Paint_Geo_lodA003_1.skeleton}
          />
          <skinnedMesh
            name="Paint_Geo_lodA003_2"
            geometry={nodes.Paint_Geo_lodA003_2.geometry}
            material={materials.ext_livery_2}
            skeleton={nodes.Paint_Geo_lodA003_2.skeleton}
          />
        </group>
        <skinnedMesh
          name="ManufacturerPlate"
          geometry={nodes.ManufacturerPlate.geometry}
          material={materials.ManufacturerPlateA}
          skeleton={nodes.ManufacturerPlate.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'ManufacturerPlate' }}
        />
        <skinnedMesh
          name="PassengerSeatBeltColoured"
          geometry={nodes.PassengerSeatBeltColoured.geometry}
          material={materials.Coloured}
          skeleton={nodes.PassengerSeatBeltColoured.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'PassengerSeatBeltColoured' }}
        />
        <skinnedMesh
          name="PassengerSeatCarbon2"
          geometry={nodes.PassengerSeatCarbon2.geometry}
          material={materials.Carbon2}
          skeleton={nodes.PassengerSeatCarbon2.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'PassengerSeatCarbon2' }}
        />
        <group
          name="PassengerSeatInterior"
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'PassengerSeatInterior' }}>
          <skinnedMesh
            name="Interior_Geo_lodA010"
            geometry={nodes.Interior_Geo_lodA010.geometry}
            material={materials.interior}
            skeleton={nodes.Interior_Geo_lodA010.skeleton}
          />
          <skinnedMesh
            name="Interior_Geo_lodA010_1"
            geometry={nodes.Interior_Geo_lodA010_1.geometry}
            material={materials.int_color2}
            skeleton={nodes.Interior_Geo_lodA010_1.skeleton}
          />
          <skinnedMesh
            name="Interior_Geo_lodA010_2"
            geometry={nodes.Interior_Geo_lodA010_2.geometry}
            material={materials.interior}
            skeleton={nodes.Interior_Geo_lodA010_2.skeleton}
          />
        </group>
        <skinnedMesh
          name="PassengerSeatInteriorTillingColourZone"
          geometry={nodes.PassengerSeatInteriorTillingColourZone.geometry}
          material={materials.int_color3}
          skeleton={nodes.PassengerSeatInteriorTillingColourZone.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'PassengerSeatInteriorTillingColourZone' }}
        />
        <group
          name="RoofPaint"
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'RoofPaint' }}>
          <skinnedMesh
            name="Paint_Geo_lodA002"
            geometry={nodes.Paint_Geo_lodA002.geometry}
            material={materials.ext_roof}
            skeleton={nodes.Paint_Geo_lodA002.skeleton}
          />
          <skinnedMesh
            name="Paint_Geo_lodA002_1"
            geometry={nodes.Paint_Geo_lodA002_1.geometry}
            material={materials.ext_livery_1}
            skeleton={nodes.Paint_Geo_lodA002_1.skeleton}
          />
          <skinnedMesh
            name="Paint_Geo_lodA002_2"
            geometry={nodes.Paint_Geo_lodA002_2.geometry}
            material={materials.ext_livery_2}
            skeleton={nodes.Paint_Geo_lodA002_2.skeleton}
          />
        </group>
        <skinnedMesh
          name="SteeringWheelCarbon2"
          geometry={nodes.SteeringWheelCarbon2.geometry}
          material={materials.Carbon2}
          skeleton={nodes.SteeringWheelCarbon2.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'SteeringWheelCarbon2' }}
        />
        <skinnedMesh
          name="SteeringWheelInterior"
          geometry={nodes.SteeringWheelInterior.geometry}
          material={materials.interior}
          skeleton={nodes.SteeringWheelInterior.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'SteeringWheelInterior' }}
        />
        <skinnedMesh
          name="SteeringWheelInteriorTilling"
          geometry={nodes.SteeringWheelInteriorTilling.geometry}
          material={materials.InteriorTillingA}
          skeleton={nodes.SteeringWheelInteriorTilling.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'SteeringWheelInteriorTilling' }}
        />
        <skinnedMesh
          name="TrunkBadge"
          geometry={nodes.TrunkBadge.geometry}
          material={materials.BadgeA}
          skeleton={nodes.TrunkBadge.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'TrunkBadge' }}
        />
        <skinnedMesh
          name="TrunkColoured"
          geometry={nodes.TrunkColoured.geometry}
          material={materials.Coloured}
          skeleton={nodes.TrunkColoured.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'TrunkColoured' }}
        />
        <group
          name="TrunkGlass"
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'TrunkGlass' }}>
          <skinnedMesh
            name="Window_Geo_lodA003"
            geometry={nodes.Window_Geo_lodA003.geometry}
            material={materials.glass_windshield}
            skeleton={nodes.Window_Geo_lodA003.skeleton}
          />
          <skinnedMesh
            name="Window_Geo_lodA003_1"
            geometry={nodes.Window_Geo_lodA003_1.geometry}
            material={materials.glass_taillight}
            skeleton={nodes.Window_Geo_lodA003_1.skeleton}
          />
        </group>
        <skinnedMesh
          name="TrunkInterior"
          geometry={nodes.TrunkInterior.geometry}
          material={materials.interior}
          skeleton={nodes.TrunkInterior.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'TrunkInterior' }}
        />
        <skinnedMesh
          name="TrunkLight"
          geometry={nodes.TrunkLight.geometry}
          material={materials.LightA}
          skeleton={nodes.TrunkLight.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'TrunkLight' }}
        />
        <group
          name="TrunkPaint"
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'TrunkPaint' }}>
          <skinnedMesh
            name="Paint_Geo_lodA001"
            geometry={nodes.Paint_Geo_lodA001.geometry}
            material={materials.ext_chassis}
            skeleton={nodes.Paint_Geo_lodA001.skeleton}
          />
          <skinnedMesh
            name="Paint_Geo_lodA001_1"
            geometry={nodes.Paint_Geo_lodA001_1.geometry}
            material={materials.ext_livery_1}
            skeleton={nodes.Paint_Geo_lodA001_1.skeleton}
          />
          <skinnedMesh
            name="Paint_Geo_lodA001_2"
            geometry={nodes.Paint_Geo_lodA001_2.geometry}
            material={materials.ext_livery_2}
            skeleton={nodes.Paint_Geo_lodA001_2.skeleton}
          />
        </group>
        <group
          name="Wheel1A_LF"
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'Wheel1A_LF' }}>
          <skinnedMesh
            name="Combined3DWheel_3DWheel_front_L_Instance1_Src4"
            geometry={nodes.Combined3DWheel_3DWheel_front_L_Instance1_Src4.geometry}
            material={materials.Wheel1A}
            skeleton={nodes.Combined3DWheel_3DWheel_front_L_Instance1_Src4.skeleton}
          />
          <skinnedMesh
            name="Combined3DWheel_3DWheel_front_L_Instance1_Src4_1"
            geometry={nodes.Combined3DWheel_3DWheel_front_L_Instance1_Src4_1.geometry}
            material={materials.ext_wheel}
            skeleton={nodes.Combined3DWheel_3DWheel_front_L_Instance1_Src4_1.skeleton}
          />
        </group>
        <group
          name="Wheel1A_LR"
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'Wheel1A_LR' }}>
          <skinnedMesh
            name="Combined3DWheel_3DWheel_front_L_Instance1_Src4171"
            geometry={nodes.Combined3DWheel_3DWheel_front_L_Instance1_Src4171.geometry}
            material={materials.Wheel1A}
            skeleton={nodes.Combined3DWheel_3DWheel_front_L_Instance1_Src4171.skeleton}
          />
          <skinnedMesh
            name="Combined3DWheel_3DWheel_front_L_Instance1_Src4171_1"
            geometry={nodes.Combined3DWheel_3DWheel_front_L_Instance1_Src4171_1.geometry}
            material={materials.ext_wheel}
            skeleton={nodes.Combined3DWheel_3DWheel_front_L_Instance1_Src4171_1.skeleton}
          />
        </group>
        <group
          name="CaliperLR"
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'CaliperLR' }}>
          <skinnedMesh
            name="Combined3DWheel_3DWheel_front_L_Instance1_Src4004"
            geometry={nodes.Combined3DWheel_3DWheel_front_L_Instance1_Src4004.geometry}
            material={materials.ext_brake_caliper}
            skeleton={nodes.Combined3DWheel_3DWheel_front_L_Instance1_Src4004.skeleton}
          />
          <skinnedMesh
            name="Combined3DWheel_3DWheel_front_L_Instance1_Src4004_1"
            geometry={nodes.Combined3DWheel_3DWheel_front_L_Instance1_Src4004_1.geometry}
            material={materials.CaliperBadgeA}
            skeleton={nodes.Combined3DWheel_3DWheel_front_L_Instance1_Src4004_1.skeleton}
          />
        </group>
        <skinnedMesh
          name="Wheel1A_RF"
          geometry={nodes.Wheel1A_RF.geometry}
          material={materials.Wheel1A}
          skeleton={nodes.Wheel1A_RF.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'Wheel1A_RF' }}
        />
        <skinnedMesh
          name="Wheel1A_RF001"
          geometry={nodes.Wheel1A_RF001.geometry}
          material={materials.ext_wheel}
          skeleton={nodes.Wheel1A_RF001.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'Wheel1A_RF.001' }}
        />
        <skinnedMesh
          name="Wheel1A_RR"
          geometry={nodes.Wheel1A_RR.geometry}
          material={materials.Wheel1A}
          skeleton={nodes.Wheel1A_RR.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'Wheel1A_RR' }}
        />
        <skinnedMesh
          name="Wheel1A_RR001"
          geometry={nodes.Wheel1A_RR001.geometry}
          material={materials.ext_wheel}
          skeleton={nodes.Wheel1A_RR001.skeleton}
          position={[-0.06, 0.015, 0]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          userData={{ name: 'Wheel1A_RR.001' }}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/27-transformed.glb')
